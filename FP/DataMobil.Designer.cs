//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace FP {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataMobil")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataMobil : global::System.Data.DataSet {
        
        private MOBILDataTable tableMOBIL;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataMobil() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected DataMobil(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["MOBIL"] != null)) {
                    base.Tables.Add(new MOBILDataTable(ds.Tables["MOBIL"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MOBILDataTable MOBIL {
            get {
                return this.tableMOBIL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DataMobil cln = ((DataMobil)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["MOBIL"] != null)) {
                    base.Tables.Add(new MOBILDataTable(ds.Tables["MOBIL"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableMOBIL = ((MOBILDataTable)(base.Tables["MOBIL"]));
            if ((initTable == true)) {
                if ((this.tableMOBIL != null)) {
                    this.tableMOBIL.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DataMobil";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataMobil.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableMOBIL = new MOBILDataTable();
            base.Tables.Add(this.tableMOBIL);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeMOBIL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataMobil ds = new DataMobil();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void MOBILRowChangeEventHandler(object sender, MOBILRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MOBILDataTable : global::System.Data.TypedTableBase<MOBILRow> {
            
            private global::System.Data.DataColumn columnID_MOBIL;
            
            private global::System.Data.DataColumn columnMERK_MOBIL;
            
            private global::System.Data.DataColumn columnJENIS_MOBIL;
            
            private global::System.Data.DataColumn columnTAHUN_PEMBUATAN;
            
            private global::System.Data.DataColumn columnISI_SILINDER;
            
            private global::System.Data.DataColumn columnNO_RANGKA_MOBIL;
            
            private global::System.Data.DataColumn columnNO_MESIN_MOBIL;
            
            private global::System.Data.DataColumn columnWARNA;
            
            private global::System.Data.DataColumn columnBAHAN_BAKAR;
            
            private global::System.Data.DataColumn columnGOLONGAN_MOBIL;
            
            private global::System.Data.DataColumn columnHARGA_SEWA;
            
            private global::System.Data.DataColumn columnSTATUS_SEWA;
            
            private global::System.Data.DataColumn columnFOTO_MOBIL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MOBILDataTable() {
                this.TableName = "MOBIL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal MOBILDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected MOBILDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_MOBILColumn {
                get {
                    return this.columnID_MOBIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MERK_MOBILColumn {
                get {
                    return this.columnMERK_MOBIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JENIS_MOBILColumn {
                get {
                    return this.columnJENIS_MOBIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TAHUN_PEMBUATANColumn {
                get {
                    return this.columnTAHUN_PEMBUATAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ISI_SILINDERColumn {
                get {
                    return this.columnISI_SILINDER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NO_RANGKA_MOBILColumn {
                get {
                    return this.columnNO_RANGKA_MOBIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NO_MESIN_MOBILColumn {
                get {
                    return this.columnNO_MESIN_MOBIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WARNAColumn {
                get {
                    return this.columnWARNA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BAHAN_BAKARColumn {
                get {
                    return this.columnBAHAN_BAKAR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GOLONGAN_MOBILColumn {
                get {
                    return this.columnGOLONGAN_MOBIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HARGA_SEWAColumn {
                get {
                    return this.columnHARGA_SEWA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STATUS_SEWAColumn {
                get {
                    return this.columnSTATUS_SEWA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FOTO_MOBILColumn {
                get {
                    return this.columnFOTO_MOBIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MOBILRow this[int index] {
                get {
                    return ((MOBILRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MOBILRowChangeEventHandler MOBILRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MOBILRowChangeEventHandler MOBILRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MOBILRowChangeEventHandler MOBILRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MOBILRowChangeEventHandler MOBILRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddMOBILRow(MOBILRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MOBILRow AddMOBILRow(string ID_MOBIL, string MERK_MOBIL, string JENIS_MOBIL, System.DateTime TAHUN_PEMBUATAN, decimal ISI_SILINDER, string NO_RANGKA_MOBIL, string NO_MESIN_MOBIL, string WARNA, string BAHAN_BAKAR, string GOLONGAN_MOBIL, decimal HARGA_SEWA, decimal STATUS_SEWA, byte[] FOTO_MOBIL) {
                MOBILRow rowMOBILRow = ((MOBILRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID_MOBIL,
                        MERK_MOBIL,
                        JENIS_MOBIL,
                        TAHUN_PEMBUATAN,
                        ISI_SILINDER,
                        NO_RANGKA_MOBIL,
                        NO_MESIN_MOBIL,
                        WARNA,
                        BAHAN_BAKAR,
                        GOLONGAN_MOBIL,
                        HARGA_SEWA,
                        STATUS_SEWA,
                        FOTO_MOBIL};
                rowMOBILRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMOBILRow);
                return rowMOBILRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MOBILRow FindByID_MOBIL(string ID_MOBIL) {
                return ((MOBILRow)(this.Rows.Find(new object[] {
                            ID_MOBIL})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                MOBILDataTable cln = ((MOBILDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MOBILDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID_MOBIL = base.Columns["ID_MOBIL"];
                this.columnMERK_MOBIL = base.Columns["MERK_MOBIL"];
                this.columnJENIS_MOBIL = base.Columns["JENIS_MOBIL"];
                this.columnTAHUN_PEMBUATAN = base.Columns["TAHUN_PEMBUATAN"];
                this.columnISI_SILINDER = base.Columns["ISI_SILINDER"];
                this.columnNO_RANGKA_MOBIL = base.Columns["NO_RANGKA_MOBIL"];
                this.columnNO_MESIN_MOBIL = base.Columns["NO_MESIN_MOBIL"];
                this.columnWARNA = base.Columns["WARNA"];
                this.columnBAHAN_BAKAR = base.Columns["BAHAN_BAKAR"];
                this.columnGOLONGAN_MOBIL = base.Columns["GOLONGAN_MOBIL"];
                this.columnHARGA_SEWA = base.Columns["HARGA_SEWA"];
                this.columnSTATUS_SEWA = base.Columns["STATUS_SEWA"];
                this.columnFOTO_MOBIL = base.Columns["FOTO_MOBIL"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID_MOBIL = new global::System.Data.DataColumn("ID_MOBIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_MOBIL);
                this.columnMERK_MOBIL = new global::System.Data.DataColumn("MERK_MOBIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMERK_MOBIL);
                this.columnJENIS_MOBIL = new global::System.Data.DataColumn("JENIS_MOBIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJENIS_MOBIL);
                this.columnTAHUN_PEMBUATAN = new global::System.Data.DataColumn("TAHUN_PEMBUATAN", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAHUN_PEMBUATAN);
                this.columnISI_SILINDER = new global::System.Data.DataColumn("ISI_SILINDER", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnISI_SILINDER);
                this.columnNO_RANGKA_MOBIL = new global::System.Data.DataColumn("NO_RANGKA_MOBIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNO_RANGKA_MOBIL);
                this.columnNO_MESIN_MOBIL = new global::System.Data.DataColumn("NO_MESIN_MOBIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNO_MESIN_MOBIL);
                this.columnWARNA = new global::System.Data.DataColumn("WARNA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWARNA);
                this.columnBAHAN_BAKAR = new global::System.Data.DataColumn("BAHAN_BAKAR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAHAN_BAKAR);
                this.columnGOLONGAN_MOBIL = new global::System.Data.DataColumn("GOLONGAN_MOBIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGOLONGAN_MOBIL);
                this.columnHARGA_SEWA = new global::System.Data.DataColumn("HARGA_SEWA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHARGA_SEWA);
                this.columnSTATUS_SEWA = new global::System.Data.DataColumn("STATUS_SEWA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATUS_SEWA);
                this.columnFOTO_MOBIL = new global::System.Data.DataColumn("FOTO_MOBIL", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFOTO_MOBIL);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_MOBIL}, true));
                this.columnID_MOBIL.AllowDBNull = false;
                this.columnID_MOBIL.Unique = true;
                this.columnID_MOBIL.MaxLength = 10;
                this.columnMERK_MOBIL.AllowDBNull = false;
                this.columnMERK_MOBIL.MaxLength = 20;
                this.columnJENIS_MOBIL.AllowDBNull = false;
                this.columnJENIS_MOBIL.MaxLength = 20;
                this.columnTAHUN_PEMBUATAN.AllowDBNull = false;
                this.columnISI_SILINDER.AllowDBNull = false;
                this.columnNO_RANGKA_MOBIL.AllowDBNull = false;
                this.columnNO_RANGKA_MOBIL.MaxLength = 20;
                this.columnNO_MESIN_MOBIL.AllowDBNull = false;
                this.columnNO_MESIN_MOBIL.MaxLength = 20;
                this.columnWARNA.AllowDBNull = false;
                this.columnWARNA.MaxLength = 10;
                this.columnBAHAN_BAKAR.AllowDBNull = false;
                this.columnBAHAN_BAKAR.MaxLength = 20;
                this.columnGOLONGAN_MOBIL.AllowDBNull = false;
                this.columnGOLONGAN_MOBIL.MaxLength = 10;
                this.columnHARGA_SEWA.AllowDBNull = false;
                this.columnSTATUS_SEWA.AllowDBNull = false;
                this.columnFOTO_MOBIL.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MOBILRow NewMOBILRow() {
                return ((MOBILRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MOBILRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(MOBILRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MOBILRowChanged != null)) {
                    this.MOBILRowChanged(this, new MOBILRowChangeEvent(((MOBILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MOBILRowChanging != null)) {
                    this.MOBILRowChanging(this, new MOBILRowChangeEvent(((MOBILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MOBILRowDeleted != null)) {
                    this.MOBILRowDeleted(this, new MOBILRowChangeEvent(((MOBILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MOBILRowDeleting != null)) {
                    this.MOBILRowDeleting(this, new MOBILRowChangeEvent(((MOBILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveMOBILRow(MOBILRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataMobil ds = new DataMobil();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MOBILDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class MOBILRow : global::System.Data.DataRow {
            
            private MOBILDataTable tableMOBIL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal MOBILRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMOBIL = ((MOBILDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ID_MOBIL {
                get {
                    return ((string)(this[this.tableMOBIL.ID_MOBILColumn]));
                }
                set {
                    this[this.tableMOBIL.ID_MOBILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MERK_MOBIL {
                get {
                    return ((string)(this[this.tableMOBIL.MERK_MOBILColumn]));
                }
                set {
                    this[this.tableMOBIL.MERK_MOBILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string JENIS_MOBIL {
                get {
                    return ((string)(this[this.tableMOBIL.JENIS_MOBILColumn]));
                }
                set {
                    this[this.tableMOBIL.JENIS_MOBILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime TAHUN_PEMBUATAN {
                get {
                    return ((global::System.DateTime)(this[this.tableMOBIL.TAHUN_PEMBUATANColumn]));
                }
                set {
                    this[this.tableMOBIL.TAHUN_PEMBUATANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ISI_SILINDER {
                get {
                    return ((decimal)(this[this.tableMOBIL.ISI_SILINDERColumn]));
                }
                set {
                    this[this.tableMOBIL.ISI_SILINDERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NO_RANGKA_MOBIL {
                get {
                    return ((string)(this[this.tableMOBIL.NO_RANGKA_MOBILColumn]));
                }
                set {
                    this[this.tableMOBIL.NO_RANGKA_MOBILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NO_MESIN_MOBIL {
                get {
                    return ((string)(this[this.tableMOBIL.NO_MESIN_MOBILColumn]));
                }
                set {
                    this[this.tableMOBIL.NO_MESIN_MOBILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string WARNA {
                get {
                    return ((string)(this[this.tableMOBIL.WARNAColumn]));
                }
                set {
                    this[this.tableMOBIL.WARNAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BAHAN_BAKAR {
                get {
                    return ((string)(this[this.tableMOBIL.BAHAN_BAKARColumn]));
                }
                set {
                    this[this.tableMOBIL.BAHAN_BAKARColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GOLONGAN_MOBIL {
                get {
                    return ((string)(this[this.tableMOBIL.GOLONGAN_MOBILColumn]));
                }
                set {
                    this[this.tableMOBIL.GOLONGAN_MOBILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal HARGA_SEWA {
                get {
                    return ((decimal)(this[this.tableMOBIL.HARGA_SEWAColumn]));
                }
                set {
                    this[this.tableMOBIL.HARGA_SEWAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal STATUS_SEWA {
                get {
                    return ((decimal)(this[this.tableMOBIL.STATUS_SEWAColumn]));
                }
                set {
                    this[this.tableMOBIL.STATUS_SEWAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] FOTO_MOBIL {
                get {
                    return ((byte[])(this[this.tableMOBIL.FOTO_MOBILColumn]));
                }
                set {
                    this[this.tableMOBIL.FOTO_MOBILColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class MOBILRowChangeEvent : global::System.EventArgs {
            
            private MOBILRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MOBILRowChangeEvent(MOBILRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MOBILRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace FP.DataMobilTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MOBILTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.DataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.DataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.DataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.DataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public MOBILTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Oracle.DataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.DataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Oracle.DataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.DataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MOBIL";
            tableMapping.ColumnMappings.Add("ID_MOBIL", "ID_MOBIL");
            tableMapping.ColumnMappings.Add("MERK_MOBIL", "MERK_MOBIL");
            tableMapping.ColumnMappings.Add("JENIS_MOBIL", "JENIS_MOBIL");
            tableMapping.ColumnMappings.Add("TAHUN_PEMBUATAN", "TAHUN_PEMBUATAN");
            tableMapping.ColumnMappings.Add("ISI_SILINDER", "ISI_SILINDER");
            tableMapping.ColumnMappings.Add("NO_RANGKA_MOBIL", "NO_RANGKA_MOBIL");
            tableMapping.ColumnMappings.Add("NO_MESIN_MOBIL", "NO_MESIN_MOBIL");
            tableMapping.ColumnMappings.Add("WARNA", "WARNA");
            tableMapping.ColumnMappings.Add("BAHAN_BAKAR", "BAHAN_BAKAR");
            tableMapping.ColumnMappings.Add("GOLONGAN_MOBIL", "GOLONGAN_MOBIL");
            tableMapping.ColumnMappings.Add("HARGA_SEWA", "HARGA_SEWA");
            tableMapping.ColumnMappings.Add("STATUS_SEWA", "STATUS_SEWA");
            tableMapping.ColumnMappings.Add("FOTO_MOBIL", "FOTO_MOBIL");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""TERAKHIR"".""MOBIL"" WHERE ((""ID_MOBIL"" = :Original_ID_MOBIL) AND (""MERK_MOBIL"" = :Original_MERK_MOBIL) AND (""JENIS_MOBIL"" = :Original_JENIS_MOBIL) AND (""TAHUN_PEMBUATAN"" = :Original_TAHUN_PEMBUATAN) AND (""ISI_SILINDER"" = :Original_ISI_SILINDER) AND (""NO_RANGKA_MOBIL"" = :Original_NO_RANGKA_MOBIL) AND (""NO_MESIN_MOBIL"" = :Original_NO_MESIN_MOBIL) AND (""WARNA"" = :Original_WARNA) AND (""BAHAN_BAKAR"" = :Original_BAHAN_BAKAR) AND (""GOLONGAN_MOBIL"" = :Original_GOLONGAN_MOBIL) AND (""HARGA_SEWA"" = :Original_HARGA_SEWA) AND (""STATUS_SEWA"" = :Original_STATUS_SEWA))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.DataAccess.Client.OracleParameter param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ID_MOBIL";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "ID_MOBIL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_MERK_MOBIL";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "MERK_MOBIL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_JENIS_MOBIL";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "JENIS_MOBIL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TAHUN_PEMBUATAN";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "TAHUN_PEMBUATAN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ISI_SILINDER";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Decimal;
            param.IsNullable = true;
            param.SourceColumn = "ISI_SILINDER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_NO_RANGKA_MOBIL";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "NO_RANGKA_MOBIL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_NO_MESIN_MOBIL";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "NO_MESIN_MOBIL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_WARNA";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "WARNA";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAHAN_BAKAR";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "BAHAN_BAKAR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_GOLONGAN_MOBIL";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "GOLONGAN_MOBIL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_HARGA_SEWA";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Decimal;
            param.IsNullable = true;
            param.SourceColumn = "HARGA_SEWA";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_STATUS_SEWA";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Decimal;
            param.IsNullable = true;
            param.SourceColumn = "STATUS_SEWA";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""TERAKHIR"".""MOBIL"" (""ID_MOBIL"", ""MERK_MOBIL"", ""JENIS_MOBIL"", ""TAHUN_PEMBUATAN"", ""ISI_SILINDER"", ""NO_RANGKA_MOBIL"", ""NO_MESIN_MOBIL"", ""WARNA"", ""BAHAN_BAKAR"", ""GOLONGAN_MOBIL"", ""HARGA_SEWA"", ""STATUS_SEWA"", ""FOTO_MOBIL"") VALUES (:ID_MOBIL, :MERK_MOBIL, :JENIS_MOBIL, :TAHUN_PEMBUATAN, :ISI_SILINDER, :NO_RANGKA_MOBIL, :NO_MESIN_MOBIL, :WARNA, :BAHAN_BAKAR, :GOLONGAN_MOBIL, :HARGA_SEWA, :STATUS_SEWA, :FOTO_MOBIL)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "ID_MOBIL";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "ID_MOBIL";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "MERK_MOBIL";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "MERK_MOBIL";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "JENIS_MOBIL";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "JENIS_MOBIL";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "TAHUN_PEMBUATAN";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "TAHUN_PEMBUATAN";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "ISI_SILINDER";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Decimal;
            param.IsNullable = true;
            param.SourceColumn = "ISI_SILINDER";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "NO_RANGKA_MOBIL";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "NO_RANGKA_MOBIL";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "NO_MESIN_MOBIL";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "NO_MESIN_MOBIL";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "WARNA";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "WARNA";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "BAHAN_BAKAR";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "BAHAN_BAKAR";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "GOLONGAN_MOBIL";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "GOLONGAN_MOBIL";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "HARGA_SEWA";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Decimal;
            param.IsNullable = true;
            param.SourceColumn = "HARGA_SEWA";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "STATUS_SEWA";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Decimal;
            param.IsNullable = true;
            param.SourceColumn = "STATUS_SEWA";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "FOTO_MOBIL";
            param.DbType = global::System.Data.DbType.Object;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Blob;
            param.IsNullable = true;
            param.SourceColumn = "FOTO_MOBIL";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""TERAKHIR"".""MOBIL"" SET ""ID_MOBIL"" = :ID_MOBIL, ""MERK_MOBIL"" = :MERK_MOBIL, ""JENIS_MOBIL"" = :JENIS_MOBIL, ""TAHUN_PEMBUATAN"" = :TAHUN_PEMBUATAN, ""ISI_SILINDER"" = :ISI_SILINDER, ""NO_RANGKA_MOBIL"" = :NO_RANGKA_MOBIL, ""NO_MESIN_MOBIL"" = :NO_MESIN_MOBIL, ""WARNA"" = :WARNA, ""BAHAN_BAKAR"" = :BAHAN_BAKAR, ""GOLONGAN_MOBIL"" = :GOLONGAN_MOBIL, ""HARGA_SEWA"" = :HARGA_SEWA, ""STATUS_SEWA"" = :STATUS_SEWA, ""FOTO_MOBIL"" = :FOTO_MOBIL WHERE ((""ID_MOBIL"" = :Original_ID_MOBIL) AND (""MERK_MOBIL"" = :Original_MERK_MOBIL) AND (""JENIS_MOBIL"" = :Original_JENIS_MOBIL) AND (""TAHUN_PEMBUATAN"" = :Original_TAHUN_PEMBUATAN) AND (""ISI_SILINDER"" = :Original_ISI_SILINDER) AND (""NO_RANGKA_MOBIL"" = :Original_NO_RANGKA_MOBIL) AND (""NO_MESIN_MOBIL"" = :Original_NO_MESIN_MOBIL) AND (""WARNA"" = :Original_WARNA) AND (""BAHAN_BAKAR"" = :Original_BAHAN_BAKAR) AND (""GOLONGAN_MOBIL"" = :Original_GOLONGAN_MOBIL) AND (""HARGA_SEWA"" = :Original_HARGA_SEWA) AND (""STATUS_SEWA"" = :Original_STATUS_SEWA))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "ID_MOBIL";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "ID_MOBIL";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "MERK_MOBIL";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "MERK_MOBIL";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "JENIS_MOBIL";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "JENIS_MOBIL";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "TAHUN_PEMBUATAN";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "TAHUN_PEMBUATAN";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "ISI_SILINDER";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Decimal;
            param.IsNullable = true;
            param.SourceColumn = "ISI_SILINDER";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "NO_RANGKA_MOBIL";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "NO_RANGKA_MOBIL";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "NO_MESIN_MOBIL";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "NO_MESIN_MOBIL";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "WARNA";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "WARNA";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "BAHAN_BAKAR";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "BAHAN_BAKAR";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "GOLONGAN_MOBIL";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "GOLONGAN_MOBIL";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "HARGA_SEWA";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Decimal;
            param.IsNullable = true;
            param.SourceColumn = "HARGA_SEWA";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "STATUS_SEWA";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Decimal;
            param.IsNullable = true;
            param.SourceColumn = "STATUS_SEWA";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "FOTO_MOBIL";
            param.DbType = global::System.Data.DbType.Object;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Blob;
            param.IsNullable = true;
            param.SourceColumn = "FOTO_MOBIL";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ID_MOBIL";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "ID_MOBIL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_MERK_MOBIL";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "MERK_MOBIL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_JENIS_MOBIL";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "JENIS_MOBIL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TAHUN_PEMBUATAN";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "TAHUN_PEMBUATAN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ISI_SILINDER";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Decimal;
            param.IsNullable = true;
            param.SourceColumn = "ISI_SILINDER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_NO_RANGKA_MOBIL";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "NO_RANGKA_MOBIL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_NO_MESIN_MOBIL";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "NO_MESIN_MOBIL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_WARNA";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "WARNA";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAHAN_BAKAR";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "BAHAN_BAKAR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_GOLONGAN_MOBIL";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "GOLONGAN_MOBIL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_HARGA_SEWA";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Decimal;
            param.IsNullable = true;
            param.SourceColumn = "HARGA_SEWA";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_STATUS_SEWA";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Decimal;
            param.IsNullable = true;
            param.SourceColumn = "STATUS_SEWA";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.DataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::FP.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.DataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.DataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_MOBIL, MERK_MOBIL, JENIS_MOBIL, TAHUN_PEMBUATAN, ISI_SILINDER, NO_RANGK" +
                "A_MOBIL, NO_MESIN_MOBIL, WARNA, BAHAN_BAKAR, GOLONGAN_MOBIL, HARGA_SEWA, STATUS_" +
                "SEWA, FOTO_MOBIL FROM TERAKHIR.MOBIL";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataMobil.MOBILDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataMobil.MOBILDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataMobil.MOBILDataTable dataTable = new DataMobil.MOBILDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataMobil.MOBILDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataMobil dataSet) {
            return this.Adapter.Update(dataSet, "MOBIL");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_ID_MOBIL, string Original_MERK_MOBIL, string Original_JENIS_MOBIL, System.DateTime Original_TAHUN_PEMBUATAN, decimal Original_ISI_SILINDER, string Original_NO_RANGKA_MOBIL, string Original_NO_MESIN_MOBIL, string Original_WARNA, string Original_BAHAN_BAKAR, string Original_GOLONGAN_MOBIL, decimal Original_HARGA_SEWA, decimal Original_STATUS_SEWA) {
            if ((Original_ID_MOBIL == null)) {
                throw new global::System.ArgumentNullException("Original_ID_MOBIL");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_ID_MOBIL));
            }
            if ((Original_MERK_MOBIL == null)) {
                throw new global::System.ArgumentNullException("Original_MERK_MOBIL");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_MERK_MOBIL));
            }
            if ((Original_JENIS_MOBIL == null)) {
                throw new global::System.ArgumentNullException("Original_JENIS_MOBIL");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_JENIS_MOBIL));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_TAHUN_PEMBUATAN));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_ISI_SILINDER));
            if ((Original_NO_RANGKA_MOBIL == null)) {
                throw new global::System.ArgumentNullException("Original_NO_RANGKA_MOBIL");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_NO_RANGKA_MOBIL));
            }
            if ((Original_NO_MESIN_MOBIL == null)) {
                throw new global::System.ArgumentNullException("Original_NO_MESIN_MOBIL");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_NO_MESIN_MOBIL));
            }
            if ((Original_WARNA == null)) {
                throw new global::System.ArgumentNullException("Original_WARNA");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_WARNA));
            }
            if ((Original_BAHAN_BAKAR == null)) {
                throw new global::System.ArgumentNullException("Original_BAHAN_BAKAR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_BAHAN_BAKAR));
            }
            if ((Original_GOLONGAN_MOBIL == null)) {
                throw new global::System.ArgumentNullException("Original_GOLONGAN_MOBIL");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_GOLONGAN_MOBIL));
            }
            this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_HARGA_SEWA));
            this.Adapter.DeleteCommand.Parameters[11].Value = ((decimal)(Original_STATUS_SEWA));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string ID_MOBIL, string MERK_MOBIL, string JENIS_MOBIL, System.DateTime TAHUN_PEMBUATAN, decimal ISI_SILINDER, string NO_RANGKA_MOBIL, string NO_MESIN_MOBIL, string WARNA, string BAHAN_BAKAR, string GOLONGAN_MOBIL, decimal HARGA_SEWA, decimal STATUS_SEWA, object FOTO_MOBIL) {
            if ((ID_MOBIL == null)) {
                throw new global::System.ArgumentNullException("ID_MOBIL");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ID_MOBIL));
            }
            if ((MERK_MOBIL == null)) {
                throw new global::System.ArgumentNullException("MERK_MOBIL");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(MERK_MOBIL));
            }
            if ((JENIS_MOBIL == null)) {
                throw new global::System.ArgumentNullException("JENIS_MOBIL");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(JENIS_MOBIL));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(TAHUN_PEMBUATAN));
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(ISI_SILINDER));
            if ((NO_RANGKA_MOBIL == null)) {
                throw new global::System.ArgumentNullException("NO_RANGKA_MOBIL");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(NO_RANGKA_MOBIL));
            }
            if ((NO_MESIN_MOBIL == null)) {
                throw new global::System.ArgumentNullException("NO_MESIN_MOBIL");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(NO_MESIN_MOBIL));
            }
            if ((WARNA == null)) {
                throw new global::System.ArgumentNullException("WARNA");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(WARNA));
            }
            if ((BAHAN_BAKAR == null)) {
                throw new global::System.ArgumentNullException("BAHAN_BAKAR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(BAHAN_BAKAR));
            }
            if ((GOLONGAN_MOBIL == null)) {
                throw new global::System.ArgumentNullException("GOLONGAN_MOBIL");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(GOLONGAN_MOBIL));
            }
            this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(HARGA_SEWA));
            this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(STATUS_SEWA));
            if ((FOTO_MOBIL == null)) {
                throw new global::System.ArgumentNullException("FOTO_MOBIL");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((object)(FOTO_MOBIL));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ID_MOBIL, 
                    string MERK_MOBIL, 
                    string JENIS_MOBIL, 
                    System.DateTime TAHUN_PEMBUATAN, 
                    decimal ISI_SILINDER, 
                    string NO_RANGKA_MOBIL, 
                    string NO_MESIN_MOBIL, 
                    string WARNA, 
                    string BAHAN_BAKAR, 
                    string GOLONGAN_MOBIL, 
                    decimal HARGA_SEWA, 
                    decimal STATUS_SEWA, 
                    object FOTO_MOBIL, 
                    string Original_ID_MOBIL, 
                    string Original_MERK_MOBIL, 
                    string Original_JENIS_MOBIL, 
                    System.DateTime Original_TAHUN_PEMBUATAN, 
                    decimal Original_ISI_SILINDER, 
                    string Original_NO_RANGKA_MOBIL, 
                    string Original_NO_MESIN_MOBIL, 
                    string Original_WARNA, 
                    string Original_BAHAN_BAKAR, 
                    string Original_GOLONGAN_MOBIL, 
                    decimal Original_HARGA_SEWA, 
                    decimal Original_STATUS_SEWA) {
            if ((ID_MOBIL == null)) {
                throw new global::System.ArgumentNullException("ID_MOBIL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ID_MOBIL));
            }
            if ((MERK_MOBIL == null)) {
                throw new global::System.ArgumentNullException("MERK_MOBIL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(MERK_MOBIL));
            }
            if ((JENIS_MOBIL == null)) {
                throw new global::System.ArgumentNullException("JENIS_MOBIL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(JENIS_MOBIL));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(TAHUN_PEMBUATAN));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(ISI_SILINDER));
            if ((NO_RANGKA_MOBIL == null)) {
                throw new global::System.ArgumentNullException("NO_RANGKA_MOBIL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(NO_RANGKA_MOBIL));
            }
            if ((NO_MESIN_MOBIL == null)) {
                throw new global::System.ArgumentNullException("NO_MESIN_MOBIL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(NO_MESIN_MOBIL));
            }
            if ((WARNA == null)) {
                throw new global::System.ArgumentNullException("WARNA");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(WARNA));
            }
            if ((BAHAN_BAKAR == null)) {
                throw new global::System.ArgumentNullException("BAHAN_BAKAR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(BAHAN_BAKAR));
            }
            if ((GOLONGAN_MOBIL == null)) {
                throw new global::System.ArgumentNullException("GOLONGAN_MOBIL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(GOLONGAN_MOBIL));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(HARGA_SEWA));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(STATUS_SEWA));
            if ((FOTO_MOBIL == null)) {
                throw new global::System.ArgumentNullException("FOTO_MOBIL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(FOTO_MOBIL));
            }
            if ((Original_ID_MOBIL == null)) {
                throw new global::System.ArgumentNullException("Original_ID_MOBIL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_ID_MOBIL));
            }
            if ((Original_MERK_MOBIL == null)) {
                throw new global::System.ArgumentNullException("Original_MERK_MOBIL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_MERK_MOBIL));
            }
            if ((Original_JENIS_MOBIL == null)) {
                throw new global::System.ArgumentNullException("Original_JENIS_MOBIL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_JENIS_MOBIL));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(Original_TAHUN_PEMBUATAN));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(Original_ISI_SILINDER));
            if ((Original_NO_RANGKA_MOBIL == null)) {
                throw new global::System.ArgumentNullException("Original_NO_RANGKA_MOBIL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_NO_RANGKA_MOBIL));
            }
            if ((Original_NO_MESIN_MOBIL == null)) {
                throw new global::System.ArgumentNullException("Original_NO_MESIN_MOBIL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_NO_MESIN_MOBIL));
            }
            if ((Original_WARNA == null)) {
                throw new global::System.ArgumentNullException("Original_WARNA");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_WARNA));
            }
            if ((Original_BAHAN_BAKAR == null)) {
                throw new global::System.ArgumentNullException("Original_BAHAN_BAKAR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_BAHAN_BAKAR));
            }
            if ((Original_GOLONGAN_MOBIL == null)) {
                throw new global::System.ArgumentNullException("Original_GOLONGAN_MOBIL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_GOLONGAN_MOBIL));
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(Original_HARGA_SEWA));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(Original_STATUS_SEWA));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string MERK_MOBIL, 
                    string JENIS_MOBIL, 
                    System.DateTime TAHUN_PEMBUATAN, 
                    decimal ISI_SILINDER, 
                    string NO_RANGKA_MOBIL, 
                    string NO_MESIN_MOBIL, 
                    string WARNA, 
                    string BAHAN_BAKAR, 
                    string GOLONGAN_MOBIL, 
                    decimal HARGA_SEWA, 
                    decimal STATUS_SEWA, 
                    object FOTO_MOBIL, 
                    string Original_ID_MOBIL, 
                    string Original_MERK_MOBIL, 
                    string Original_JENIS_MOBIL, 
                    System.DateTime Original_TAHUN_PEMBUATAN, 
                    decimal Original_ISI_SILINDER, 
                    string Original_NO_RANGKA_MOBIL, 
                    string Original_NO_MESIN_MOBIL, 
                    string Original_WARNA, 
                    string Original_BAHAN_BAKAR, 
                    string Original_GOLONGAN_MOBIL, 
                    decimal Original_HARGA_SEWA, 
                    decimal Original_STATUS_SEWA) {
            return this.Update(Original_ID_MOBIL, MERK_MOBIL, JENIS_MOBIL, TAHUN_PEMBUATAN, ISI_SILINDER, NO_RANGKA_MOBIL, NO_MESIN_MOBIL, WARNA, BAHAN_BAKAR, GOLONGAN_MOBIL, HARGA_SEWA, STATUS_SEWA, FOTO_MOBIL, Original_ID_MOBIL, Original_MERK_MOBIL, Original_JENIS_MOBIL, Original_TAHUN_PEMBUATAN, Original_ISI_SILINDER, Original_NO_RANGKA_MOBIL, Original_NO_MESIN_MOBIL, Original_WARNA, Original_BAHAN_BAKAR, Original_GOLONGAN_MOBIL, Original_HARGA_SEWA, Original_STATUS_SEWA);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private MOBILTableAdapter _mOBILTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public MOBILTableAdapter MOBILTableAdapter {
            get {
                return this._mOBILTableAdapter;
            }
            set {
                this._mOBILTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._mOBILTableAdapter != null) 
                            && (this._mOBILTableAdapter.Connection != null))) {
                    return this._mOBILTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._mOBILTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(DataMobil dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._mOBILTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.MOBIL.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._mOBILTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(DataMobil dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._mOBILTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.MOBIL.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._mOBILTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(DataMobil dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._mOBILTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.MOBIL.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._mOBILTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(DataMobil dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._mOBILTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._mOBILTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._mOBILTableAdapter != null)) {
                    revertConnections.Add(this._mOBILTableAdapter, this._mOBILTableAdapter.Connection);
                    this._mOBILTableAdapter.Connection = ((global::Oracle.DataAccess.Client.OracleConnection)(workConnection));
                    this._mOBILTableAdapter.Transaction = ((global::Oracle.DataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._mOBILTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._mOBILTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._mOBILTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._mOBILTableAdapter != null)) {
                    this._mOBILTableAdapter.Connection = ((global::Oracle.DataAccess.Client.OracleConnection)(revertConnections[this._mOBILTableAdapter]));
                    this._mOBILTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591