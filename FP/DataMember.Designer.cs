//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace FP {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataMember")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataMember : global::System.Data.DataSet {
        
        private PELANGGANDataTable tablePELANGGAN;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataMember() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected DataMember(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["PELANGGAN"] != null)) {
                    base.Tables.Add(new PELANGGANDataTable(ds.Tables["PELANGGAN"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PELANGGANDataTable PELANGGAN {
            get {
                return this.tablePELANGGAN;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DataMember cln = ((DataMember)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["PELANGGAN"] != null)) {
                    base.Tables.Add(new PELANGGANDataTable(ds.Tables["PELANGGAN"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablePELANGGAN = ((PELANGGANDataTable)(base.Tables["PELANGGAN"]));
            if ((initTable == true)) {
                if ((this.tablePELANGGAN != null)) {
                    this.tablePELANGGAN.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DataMember";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataMember.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablePELANGGAN = new PELANGGANDataTable();
            base.Tables.Add(this.tablePELANGGAN);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializePELANGGAN() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataMember ds = new DataMember();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void PELANGGANRowChangeEventHandler(object sender, PELANGGANRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PELANGGANDataTable : global::System.Data.TypedTableBase<PELANGGANRow> {
            
            private global::System.Data.DataColumn columnID_LANGGAN;
            
            private global::System.Data.DataColumn columnNAMA_LENGKAP;
            
            private global::System.Data.DataColumn columnTEMPAT_LAHIR;
            
            private global::System.Data.DataColumn columnTANGGAL_LAHIR;
            
            private global::System.Data.DataColumn columnWARGA_NEGARA;
            
            private global::System.Data.DataColumn columnJENIS_IDENTITAS;
            
            private global::System.Data.DataColumn columnNO_IDENTITAS;
            
            private global::System.Data.DataColumn columnJ_KEL;
            
            private global::System.Data.DataColumn columnALAMAT;
            
            private global::System.Data.DataColumn columnNO_HP;
            
            private global::System.Data.DataColumn columnNO_TELP;
            
            private global::System.Data.DataColumn columnTANGGAL_BERGABUNG;
            
            private global::System.Data.DataColumn columnFOTO_PELANGGAN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PELANGGANDataTable() {
                this.TableName = "PELANGGAN";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PELANGGANDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected PELANGGANDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_LANGGANColumn {
                get {
                    return this.columnID_LANGGAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NAMA_LENGKAPColumn {
                get {
                    return this.columnNAMA_LENGKAP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TEMPAT_LAHIRColumn {
                get {
                    return this.columnTEMPAT_LAHIR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TANGGAL_LAHIRColumn {
                get {
                    return this.columnTANGGAL_LAHIR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WARGA_NEGARAColumn {
                get {
                    return this.columnWARGA_NEGARA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JENIS_IDENTITASColumn {
                get {
                    return this.columnJENIS_IDENTITAS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NO_IDENTITASColumn {
                get {
                    return this.columnNO_IDENTITAS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn J_KELColumn {
                get {
                    return this.columnJ_KEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ALAMATColumn {
                get {
                    return this.columnALAMAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NO_HPColumn {
                get {
                    return this.columnNO_HP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NO_TELPColumn {
                get {
                    return this.columnNO_TELP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TANGGAL_BERGABUNGColumn {
                get {
                    return this.columnTANGGAL_BERGABUNG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FOTO_PELANGGANColumn {
                get {
                    return this.columnFOTO_PELANGGAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PELANGGANRow this[int index] {
                get {
                    return ((PELANGGANRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PELANGGANRowChangeEventHandler PELANGGANRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PELANGGANRowChangeEventHandler PELANGGANRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PELANGGANRowChangeEventHandler PELANGGANRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PELANGGANRowChangeEventHandler PELANGGANRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddPELANGGANRow(PELANGGANRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PELANGGANRow AddPELANGGANRow(string ID_LANGGAN, string NAMA_LENGKAP, string TEMPAT_LAHIR, System.DateTime TANGGAL_LAHIR, string WARGA_NEGARA, string JENIS_IDENTITAS, string NO_IDENTITAS, string J_KEL, string ALAMAT, string NO_HP, string NO_TELP, System.DateTime TANGGAL_BERGABUNG, byte[] FOTO_PELANGGAN) {
                PELANGGANRow rowPELANGGANRow = ((PELANGGANRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID_LANGGAN,
                        NAMA_LENGKAP,
                        TEMPAT_LAHIR,
                        TANGGAL_LAHIR,
                        WARGA_NEGARA,
                        JENIS_IDENTITAS,
                        NO_IDENTITAS,
                        J_KEL,
                        ALAMAT,
                        NO_HP,
                        NO_TELP,
                        TANGGAL_BERGABUNG,
                        FOTO_PELANGGAN};
                rowPELANGGANRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPELANGGANRow);
                return rowPELANGGANRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PELANGGANRow FindByID_LANGGAN(string ID_LANGGAN) {
                return ((PELANGGANRow)(this.Rows.Find(new object[] {
                            ID_LANGGAN})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PELANGGANDataTable cln = ((PELANGGANDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PELANGGANDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID_LANGGAN = base.Columns["ID_LANGGAN"];
                this.columnNAMA_LENGKAP = base.Columns["NAMA_LENGKAP"];
                this.columnTEMPAT_LAHIR = base.Columns["TEMPAT_LAHIR"];
                this.columnTANGGAL_LAHIR = base.Columns["TANGGAL_LAHIR"];
                this.columnWARGA_NEGARA = base.Columns["WARGA_NEGARA"];
                this.columnJENIS_IDENTITAS = base.Columns["JENIS_IDENTITAS"];
                this.columnNO_IDENTITAS = base.Columns["NO_IDENTITAS"];
                this.columnJ_KEL = base.Columns["J_KEL"];
                this.columnALAMAT = base.Columns["ALAMAT"];
                this.columnNO_HP = base.Columns["NO_HP"];
                this.columnNO_TELP = base.Columns["NO_TELP"];
                this.columnTANGGAL_BERGABUNG = base.Columns["TANGGAL_BERGABUNG"];
                this.columnFOTO_PELANGGAN = base.Columns["FOTO_PELANGGAN"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID_LANGGAN = new global::System.Data.DataColumn("ID_LANGGAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_LANGGAN);
                this.columnNAMA_LENGKAP = new global::System.Data.DataColumn("NAMA_LENGKAP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAMA_LENGKAP);
                this.columnTEMPAT_LAHIR = new global::System.Data.DataColumn("TEMPAT_LAHIR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEMPAT_LAHIR);
                this.columnTANGGAL_LAHIR = new global::System.Data.DataColumn("TANGGAL_LAHIR", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTANGGAL_LAHIR);
                this.columnWARGA_NEGARA = new global::System.Data.DataColumn("WARGA_NEGARA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWARGA_NEGARA);
                this.columnJENIS_IDENTITAS = new global::System.Data.DataColumn("JENIS_IDENTITAS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJENIS_IDENTITAS);
                this.columnNO_IDENTITAS = new global::System.Data.DataColumn("NO_IDENTITAS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNO_IDENTITAS);
                this.columnJ_KEL = new global::System.Data.DataColumn("J_KEL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJ_KEL);
                this.columnALAMAT = new global::System.Data.DataColumn("ALAMAT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnALAMAT);
                this.columnNO_HP = new global::System.Data.DataColumn("NO_HP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNO_HP);
                this.columnNO_TELP = new global::System.Data.DataColumn("NO_TELP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNO_TELP);
                this.columnTANGGAL_BERGABUNG = new global::System.Data.DataColumn("TANGGAL_BERGABUNG", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTANGGAL_BERGABUNG);
                this.columnFOTO_PELANGGAN = new global::System.Data.DataColumn("FOTO_PELANGGAN", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFOTO_PELANGGAN);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_LANGGAN}, true));
                this.columnID_LANGGAN.AllowDBNull = false;
                this.columnID_LANGGAN.Unique = true;
                this.columnID_LANGGAN.MaxLength = 40;
                this.columnNAMA_LENGKAP.AllowDBNull = false;
                this.columnNAMA_LENGKAP.MaxLength = 40;
                this.columnTEMPAT_LAHIR.MaxLength = 20;
                this.columnWARGA_NEGARA.AllowDBNull = false;
                this.columnWARGA_NEGARA.MaxLength = 10;
                this.columnJENIS_IDENTITAS.AllowDBNull = false;
                this.columnJENIS_IDENTITAS.MaxLength = 10;
                this.columnNO_IDENTITAS.AllowDBNull = false;
                this.columnNO_IDENTITAS.MaxLength = 40;
                this.columnJ_KEL.MaxLength = 1;
                this.columnALAMAT.AllowDBNull = false;
                this.columnALAMAT.MaxLength = 100;
                this.columnNO_HP.MaxLength = 15;
                this.columnNO_TELP.AllowDBNull = false;
                this.columnNO_TELP.MaxLength = 15;
                this.columnTANGGAL_BERGABUNG.AllowDBNull = false;
                this.columnFOTO_PELANGGAN.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PELANGGANRow NewPELANGGANRow() {
                return ((PELANGGANRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PELANGGANRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PELANGGANRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PELANGGANRowChanged != null)) {
                    this.PELANGGANRowChanged(this, new PELANGGANRowChangeEvent(((PELANGGANRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PELANGGANRowChanging != null)) {
                    this.PELANGGANRowChanging(this, new PELANGGANRowChangeEvent(((PELANGGANRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PELANGGANRowDeleted != null)) {
                    this.PELANGGANRowDeleted(this, new PELANGGANRowChangeEvent(((PELANGGANRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PELANGGANRowDeleting != null)) {
                    this.PELANGGANRowDeleting(this, new PELANGGANRowChangeEvent(((PELANGGANRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovePELANGGANRow(PELANGGANRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataMember ds = new DataMember();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PELANGGANDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PELANGGANRow : global::System.Data.DataRow {
            
            private PELANGGANDataTable tablePELANGGAN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PELANGGANRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePELANGGAN = ((PELANGGANDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ID_LANGGAN {
                get {
                    return ((string)(this[this.tablePELANGGAN.ID_LANGGANColumn]));
                }
                set {
                    this[this.tablePELANGGAN.ID_LANGGANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NAMA_LENGKAP {
                get {
                    return ((string)(this[this.tablePELANGGAN.NAMA_LENGKAPColumn]));
                }
                set {
                    this[this.tablePELANGGAN.NAMA_LENGKAPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TEMPAT_LAHIR {
                get {
                    try {
                        return ((string)(this[this.tablePELANGGAN.TEMPAT_LAHIRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TEMPAT_LAHIR\' in table \'PELANGGAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePELANGGAN.TEMPAT_LAHIRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime TANGGAL_LAHIR {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePELANGGAN.TANGGAL_LAHIRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TANGGAL_LAHIR\' in table \'PELANGGAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePELANGGAN.TANGGAL_LAHIRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string WARGA_NEGARA {
                get {
                    return ((string)(this[this.tablePELANGGAN.WARGA_NEGARAColumn]));
                }
                set {
                    this[this.tablePELANGGAN.WARGA_NEGARAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string JENIS_IDENTITAS {
                get {
                    return ((string)(this[this.tablePELANGGAN.JENIS_IDENTITASColumn]));
                }
                set {
                    this[this.tablePELANGGAN.JENIS_IDENTITASColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NO_IDENTITAS {
                get {
                    return ((string)(this[this.tablePELANGGAN.NO_IDENTITASColumn]));
                }
                set {
                    this[this.tablePELANGGAN.NO_IDENTITASColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string J_KEL {
                get {
                    try {
                        return ((string)(this[this.tablePELANGGAN.J_KELColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'J_KEL\' in table \'PELANGGAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePELANGGAN.J_KELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ALAMAT {
                get {
                    return ((string)(this[this.tablePELANGGAN.ALAMATColumn]));
                }
                set {
                    this[this.tablePELANGGAN.ALAMATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NO_HP {
                get {
                    try {
                        return ((string)(this[this.tablePELANGGAN.NO_HPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NO_HP\' in table \'PELANGGAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePELANGGAN.NO_HPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NO_TELP {
                get {
                    return ((string)(this[this.tablePELANGGAN.NO_TELPColumn]));
                }
                set {
                    this[this.tablePELANGGAN.NO_TELPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime TANGGAL_BERGABUNG {
                get {
                    return ((global::System.DateTime)(this[this.tablePELANGGAN.TANGGAL_BERGABUNGColumn]));
                }
                set {
                    this[this.tablePELANGGAN.TANGGAL_BERGABUNGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] FOTO_PELANGGAN {
                get {
                    return ((byte[])(this[this.tablePELANGGAN.FOTO_PELANGGANColumn]));
                }
                set {
                    this[this.tablePELANGGAN.FOTO_PELANGGANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTEMPAT_LAHIRNull() {
                return this.IsNull(this.tablePELANGGAN.TEMPAT_LAHIRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTEMPAT_LAHIRNull() {
                this[this.tablePELANGGAN.TEMPAT_LAHIRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTANGGAL_LAHIRNull() {
                return this.IsNull(this.tablePELANGGAN.TANGGAL_LAHIRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTANGGAL_LAHIRNull() {
                this[this.tablePELANGGAN.TANGGAL_LAHIRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJ_KELNull() {
                return this.IsNull(this.tablePELANGGAN.J_KELColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJ_KELNull() {
                this[this.tablePELANGGAN.J_KELColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNO_HPNull() {
                return this.IsNull(this.tablePELANGGAN.NO_HPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNO_HPNull() {
                this[this.tablePELANGGAN.NO_HPColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class PELANGGANRowChangeEvent : global::System.EventArgs {
            
            private PELANGGANRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PELANGGANRowChangeEvent(PELANGGANRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PELANGGANRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace FP.DataMemberTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PELANGGANTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.DataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.DataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.DataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.DataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PELANGGANTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Oracle.DataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.DataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Oracle.DataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.DataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PELANGGAN";
            tableMapping.ColumnMappings.Add("ID_LANGGAN", "ID_LANGGAN");
            tableMapping.ColumnMappings.Add("NAMA_LENGKAP", "NAMA_LENGKAP");
            tableMapping.ColumnMappings.Add("TEMPAT_LAHIR", "TEMPAT_LAHIR");
            tableMapping.ColumnMappings.Add("TANGGAL_LAHIR", "TANGGAL_LAHIR");
            tableMapping.ColumnMappings.Add("WARGA_NEGARA", "WARGA_NEGARA");
            tableMapping.ColumnMappings.Add("JENIS_IDENTITAS", "JENIS_IDENTITAS");
            tableMapping.ColumnMappings.Add("NO_IDENTITAS", "NO_IDENTITAS");
            tableMapping.ColumnMappings.Add("J_KEL", "J_KEL");
            tableMapping.ColumnMappings.Add("ALAMAT", "ALAMAT");
            tableMapping.ColumnMappings.Add("NO_HP", "NO_HP");
            tableMapping.ColumnMappings.Add("NO_TELP", "NO_TELP");
            tableMapping.ColumnMappings.Add("TANGGAL_BERGABUNG", "TANGGAL_BERGABUNG");
            tableMapping.ColumnMappings.Add("FOTO_PELANGGAN", "FOTO_PELANGGAN");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""TERAKHIR"".""PELANGGAN"" WHERE ((""ID_LANGGAN"" = :Original_ID_LANGGAN) AND (""NAMA_LENGKAP"" = :Original_NAMA_LENGKAP) AND ((:IsNull_TEMPAT_LAHIR = 1 AND ""TEMPAT_LAHIR"" IS NULL) OR (""TEMPAT_LAHIR"" = :Original_TEMPAT_LAHIR)) AND ((:IsNull_TANGGAL_LAHIR = 1 AND ""TANGGAL_LAHIR"" IS NULL) OR (""TANGGAL_LAHIR"" = :Original_TANGGAL_LAHIR)) AND (""WARGA_NEGARA"" = :Original_WARGA_NEGARA) AND (""JENIS_IDENTITAS"" = :Original_JENIS_IDENTITAS) AND (""NO_IDENTITAS"" = :Original_NO_IDENTITAS) AND ((:IsNull_J_KEL = 1 AND ""J_KEL"" IS NULL) OR (""J_KEL"" = :Original_J_KEL)) AND (""ALAMAT"" = :Original_ALAMAT) AND ((:IsNull_NO_HP = 1 AND ""NO_HP"" IS NULL) OR (""NO_HP"" = :Original_NO_HP)) AND (""NO_TELP"" = :Original_NO_TELP) AND (""TANGGAL_BERGABUNG"" = :Original_TANGGAL_BERGABUNG))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.DataAccess.Client.OracleParameter param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ID_LANGGAN";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "ID_LANGGAN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_NAMA_LENGKAP";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "NAMA_LENGKAP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TEMPAT_LAHIR";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "TEMPAT_LAHIR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TEMPAT_LAHIR";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "TEMPAT_LAHIR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TANGGAL_LAHIR";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "TANGGAL_LAHIR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TANGGAL_LAHIR";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "TANGGAL_LAHIR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_WARGA_NEGARA";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "WARGA_NEGARA";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_JENIS_IDENTITAS";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "JENIS_IDENTITAS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_NO_IDENTITAS";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "NO_IDENTITAS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_J_KEL";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "J_KEL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_J_KEL";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "J_KEL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ALAMAT";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "ALAMAT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_NO_HP";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "NO_HP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_NO_HP";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "NO_HP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_NO_TELP";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "NO_TELP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TANGGAL_BERGABUNG";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "TANGGAL_BERGABUNG";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""TERAKHIR"".""PELANGGAN"" (""ID_LANGGAN"", ""NAMA_LENGKAP"", ""TEMPAT_LAHIR"", ""TANGGAL_LAHIR"", ""WARGA_NEGARA"", ""JENIS_IDENTITAS"", ""NO_IDENTITAS"", ""J_KEL"", ""ALAMAT"", ""NO_HP"", ""NO_TELP"", ""TANGGAL_BERGABUNG"", ""FOTO_PELANGGAN"") VALUES (:ID_LANGGAN, :NAMA_LENGKAP, :TEMPAT_LAHIR, :TANGGAL_LAHIR, :WARGA_NEGARA, :JENIS_IDENTITAS, :NO_IDENTITAS, :J_KEL, :ALAMAT, :NO_HP, :NO_TELP, :TANGGAL_BERGABUNG, :FOTO_PELANGGAN)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "ID_LANGGAN";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "ID_LANGGAN";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "NAMA_LENGKAP";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "NAMA_LENGKAP";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "TEMPAT_LAHIR";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "TEMPAT_LAHIR";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "TANGGAL_LAHIR";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "TANGGAL_LAHIR";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "WARGA_NEGARA";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "WARGA_NEGARA";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "JENIS_IDENTITAS";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "JENIS_IDENTITAS";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "NO_IDENTITAS";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "NO_IDENTITAS";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "J_KEL";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "J_KEL";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "ALAMAT";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "ALAMAT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "NO_HP";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "NO_HP";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "NO_TELP";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "NO_TELP";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "TANGGAL_BERGABUNG";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "TANGGAL_BERGABUNG";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "FOTO_PELANGGAN";
            param.DbType = global::System.Data.DbType.Object;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Blob;
            param.IsNullable = true;
            param.SourceColumn = "FOTO_PELANGGAN";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""TERAKHIR"".""PELANGGAN"" SET ""ID_LANGGAN"" = :ID_LANGGAN, ""NAMA_LENGKAP"" = :NAMA_LENGKAP, ""TEMPAT_LAHIR"" = :TEMPAT_LAHIR, ""TANGGAL_LAHIR"" = :TANGGAL_LAHIR, ""WARGA_NEGARA"" = :WARGA_NEGARA, ""JENIS_IDENTITAS"" = :JENIS_IDENTITAS, ""NO_IDENTITAS"" = :NO_IDENTITAS, ""J_KEL"" = :J_KEL, ""ALAMAT"" = :ALAMAT, ""NO_HP"" = :NO_HP, ""NO_TELP"" = :NO_TELP, ""TANGGAL_BERGABUNG"" = :TANGGAL_BERGABUNG, ""FOTO_PELANGGAN"" = :FOTO_PELANGGAN WHERE ((""ID_LANGGAN"" = :Original_ID_LANGGAN) AND (""NAMA_LENGKAP"" = :Original_NAMA_LENGKAP) AND ((:IsNull_TEMPAT_LAHIR = 1 AND ""TEMPAT_LAHIR"" IS NULL) OR (""TEMPAT_LAHIR"" = :Original_TEMPAT_LAHIR)) AND ((:IsNull_TANGGAL_LAHIR = 1 AND ""TANGGAL_LAHIR"" IS NULL) OR (""TANGGAL_LAHIR"" = :Original_TANGGAL_LAHIR)) AND (""WARGA_NEGARA"" = :Original_WARGA_NEGARA) AND (""JENIS_IDENTITAS"" = :Original_JENIS_IDENTITAS) AND (""NO_IDENTITAS"" = :Original_NO_IDENTITAS) AND ((:IsNull_J_KEL = 1 AND ""J_KEL"" IS NULL) OR (""J_KEL"" = :Original_J_KEL)) AND (""ALAMAT"" = :Original_ALAMAT) AND ((:IsNull_NO_HP = 1 AND ""NO_HP"" IS NULL) OR (""NO_HP"" = :Original_NO_HP)) AND (""NO_TELP"" = :Original_NO_TELP) AND (""TANGGAL_BERGABUNG"" = :Original_TANGGAL_BERGABUNG))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "ID_LANGGAN";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "ID_LANGGAN";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "NAMA_LENGKAP";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "NAMA_LENGKAP";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "TEMPAT_LAHIR";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "TEMPAT_LAHIR";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "TANGGAL_LAHIR";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "TANGGAL_LAHIR";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "WARGA_NEGARA";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "WARGA_NEGARA";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "JENIS_IDENTITAS";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "JENIS_IDENTITAS";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "NO_IDENTITAS";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "NO_IDENTITAS";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "J_KEL";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "J_KEL";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "ALAMAT";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "ALAMAT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "NO_HP";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "NO_HP";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "NO_TELP";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "NO_TELP";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "TANGGAL_BERGABUNG";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "TANGGAL_BERGABUNG";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "FOTO_PELANGGAN";
            param.DbType = global::System.Data.DbType.Object;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Blob;
            param.IsNullable = true;
            param.SourceColumn = "FOTO_PELANGGAN";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ID_LANGGAN";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "ID_LANGGAN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_NAMA_LENGKAP";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "NAMA_LENGKAP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TEMPAT_LAHIR";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "TEMPAT_LAHIR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TEMPAT_LAHIR";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "TEMPAT_LAHIR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TANGGAL_LAHIR";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "TANGGAL_LAHIR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TANGGAL_LAHIR";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "TANGGAL_LAHIR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_WARGA_NEGARA";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "WARGA_NEGARA";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_JENIS_IDENTITAS";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "JENIS_IDENTITAS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_NO_IDENTITAS";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "NO_IDENTITAS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_J_KEL";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "J_KEL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_J_KEL";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "J_KEL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ALAMAT";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "ALAMAT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_NO_HP";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "NO_HP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_NO_HP";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "NO_HP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_NO_TELP";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "NO_TELP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TANGGAL_BERGABUNG";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "TANGGAL_BERGABUNG";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.DataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::FP.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.DataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.DataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_LANGGAN, NAMA_LENGKAP, TEMPAT_LAHIR, TANGGAL_LAHIR, WARGA_NEGARA, JENIS" +
                "_IDENTITAS, NO_IDENTITAS, J_KEL, ALAMAT, NO_HP, NO_TELP, TANGGAL_BERGABUNG, FOTO" +
                "_PELANGGAN FROM TERAKHIR.PELANGGAN";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataMember.PELANGGANDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataMember.PELANGGANDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataMember.PELANGGANDataTable dataTable = new DataMember.PELANGGANDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataMember.PELANGGANDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataMember dataSet) {
            return this.Adapter.Update(dataSet, "PELANGGAN");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_ID_LANGGAN, string Original_NAMA_LENGKAP, string Original_TEMPAT_LAHIR, global::System.Nullable<global::System.DateTime> Original_TANGGAL_LAHIR, string Original_WARGA_NEGARA, string Original_JENIS_IDENTITAS, string Original_NO_IDENTITAS, string Original_J_KEL, string Original_ALAMAT, string Original_NO_HP, string Original_NO_TELP, System.DateTime Original_TANGGAL_BERGABUNG) {
            if ((Original_ID_LANGGAN == null)) {
                throw new global::System.ArgumentNullException("Original_ID_LANGGAN");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_ID_LANGGAN));
            }
            if ((Original_NAMA_LENGKAP == null)) {
                throw new global::System.ArgumentNullException("Original_NAMA_LENGKAP");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_NAMA_LENGKAP));
            }
            if ((Original_TEMPAT_LAHIR == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_TEMPAT_LAHIR));
            }
            if ((Original_TANGGAL_LAHIR.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_TANGGAL_LAHIR.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_WARGA_NEGARA == null)) {
                throw new global::System.ArgumentNullException("Original_WARGA_NEGARA");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_WARGA_NEGARA));
            }
            if ((Original_JENIS_IDENTITAS == null)) {
                throw new global::System.ArgumentNullException("Original_JENIS_IDENTITAS");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_JENIS_IDENTITAS));
            }
            if ((Original_NO_IDENTITAS == null)) {
                throw new global::System.ArgumentNullException("Original_NO_IDENTITAS");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_NO_IDENTITAS));
            }
            if ((Original_J_KEL == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_J_KEL));
            }
            if ((Original_ALAMAT == null)) {
                throw new global::System.ArgumentNullException("Original_ALAMAT");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_ALAMAT));
            }
            if ((Original_NO_HP == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_NO_HP));
            }
            if ((Original_NO_TELP == null)) {
                throw new global::System.ArgumentNullException("Original_NO_TELP");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_NO_TELP));
            }
            this.Adapter.DeleteCommand.Parameters[15].Value = ((System.DateTime)(Original_TANGGAL_BERGABUNG));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string ID_LANGGAN, string NAMA_LENGKAP, string TEMPAT_LAHIR, global::System.Nullable<global::System.DateTime> TANGGAL_LAHIR, string WARGA_NEGARA, string JENIS_IDENTITAS, string NO_IDENTITAS, string J_KEL, string ALAMAT, string NO_HP, string NO_TELP, System.DateTime TANGGAL_BERGABUNG, object FOTO_PELANGGAN) {
            if ((ID_LANGGAN == null)) {
                throw new global::System.ArgumentNullException("ID_LANGGAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ID_LANGGAN));
            }
            if ((NAMA_LENGKAP == null)) {
                throw new global::System.ArgumentNullException("NAMA_LENGKAP");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(NAMA_LENGKAP));
            }
            if ((TEMPAT_LAHIR == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(TEMPAT_LAHIR));
            }
            if ((TANGGAL_LAHIR.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(TANGGAL_LAHIR.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((WARGA_NEGARA == null)) {
                throw new global::System.ArgumentNullException("WARGA_NEGARA");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(WARGA_NEGARA));
            }
            if ((JENIS_IDENTITAS == null)) {
                throw new global::System.ArgumentNullException("JENIS_IDENTITAS");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(JENIS_IDENTITAS));
            }
            if ((NO_IDENTITAS == null)) {
                throw new global::System.ArgumentNullException("NO_IDENTITAS");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(NO_IDENTITAS));
            }
            if ((J_KEL == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(J_KEL));
            }
            if ((ALAMAT == null)) {
                throw new global::System.ArgumentNullException("ALAMAT");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(ALAMAT));
            }
            if ((NO_HP == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(NO_HP));
            }
            if ((NO_TELP == null)) {
                throw new global::System.ArgumentNullException("NO_TELP");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(NO_TELP));
            }
            this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(TANGGAL_BERGABUNG));
            if ((FOTO_PELANGGAN == null)) {
                throw new global::System.ArgumentNullException("FOTO_PELANGGAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((object)(FOTO_PELANGGAN));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ID_LANGGAN, 
                    string NAMA_LENGKAP, 
                    string TEMPAT_LAHIR, 
                    global::System.Nullable<global::System.DateTime> TANGGAL_LAHIR, 
                    string WARGA_NEGARA, 
                    string JENIS_IDENTITAS, 
                    string NO_IDENTITAS, 
                    string J_KEL, 
                    string ALAMAT, 
                    string NO_HP, 
                    string NO_TELP, 
                    System.DateTime TANGGAL_BERGABUNG, 
                    object FOTO_PELANGGAN, 
                    string Original_ID_LANGGAN, 
                    string Original_NAMA_LENGKAP, 
                    string Original_TEMPAT_LAHIR, 
                    global::System.Nullable<global::System.DateTime> Original_TANGGAL_LAHIR, 
                    string Original_WARGA_NEGARA, 
                    string Original_JENIS_IDENTITAS, 
                    string Original_NO_IDENTITAS, 
                    string Original_J_KEL, 
                    string Original_ALAMAT, 
                    string Original_NO_HP, 
                    string Original_NO_TELP, 
                    System.DateTime Original_TANGGAL_BERGABUNG) {
            if ((ID_LANGGAN == null)) {
                throw new global::System.ArgumentNullException("ID_LANGGAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ID_LANGGAN));
            }
            if ((NAMA_LENGKAP == null)) {
                throw new global::System.ArgumentNullException("NAMA_LENGKAP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(NAMA_LENGKAP));
            }
            if ((TEMPAT_LAHIR == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(TEMPAT_LAHIR));
            }
            if ((TANGGAL_LAHIR.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(TANGGAL_LAHIR.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((WARGA_NEGARA == null)) {
                throw new global::System.ArgumentNullException("WARGA_NEGARA");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(WARGA_NEGARA));
            }
            if ((JENIS_IDENTITAS == null)) {
                throw new global::System.ArgumentNullException("JENIS_IDENTITAS");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(JENIS_IDENTITAS));
            }
            if ((NO_IDENTITAS == null)) {
                throw new global::System.ArgumentNullException("NO_IDENTITAS");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(NO_IDENTITAS));
            }
            if ((J_KEL == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(J_KEL));
            }
            if ((ALAMAT == null)) {
                throw new global::System.ArgumentNullException("ALAMAT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(ALAMAT));
            }
            if ((NO_HP == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(NO_HP));
            }
            if ((NO_TELP == null)) {
                throw new global::System.ArgumentNullException("NO_TELP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(NO_TELP));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(TANGGAL_BERGABUNG));
            if ((FOTO_PELANGGAN == null)) {
                throw new global::System.ArgumentNullException("FOTO_PELANGGAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(FOTO_PELANGGAN));
            }
            if ((Original_ID_LANGGAN == null)) {
                throw new global::System.ArgumentNullException("Original_ID_LANGGAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_ID_LANGGAN));
            }
            if ((Original_NAMA_LENGKAP == null)) {
                throw new global::System.ArgumentNullException("Original_NAMA_LENGKAP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_NAMA_LENGKAP));
            }
            if ((Original_TEMPAT_LAHIR == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_TEMPAT_LAHIR));
            }
            if ((Original_TANGGAL_LAHIR.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(Original_TANGGAL_LAHIR.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_WARGA_NEGARA == null)) {
                throw new global::System.ArgumentNullException("Original_WARGA_NEGARA");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_WARGA_NEGARA));
            }
            if ((Original_JENIS_IDENTITAS == null)) {
                throw new global::System.ArgumentNullException("Original_JENIS_IDENTITAS");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_JENIS_IDENTITAS));
            }
            if ((Original_NO_IDENTITAS == null)) {
                throw new global::System.ArgumentNullException("Original_NO_IDENTITAS");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_NO_IDENTITAS));
            }
            if ((Original_J_KEL == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_J_KEL));
            }
            if ((Original_ALAMAT == null)) {
                throw new global::System.ArgumentNullException("Original_ALAMAT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_ALAMAT));
            }
            if ((Original_NO_HP == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_NO_HP));
            }
            if ((Original_NO_TELP == null)) {
                throw new global::System.ArgumentNullException("Original_NO_TELP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_NO_TELP));
            }
            this.Adapter.UpdateCommand.Parameters[28].Value = ((System.DateTime)(Original_TANGGAL_BERGABUNG));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string NAMA_LENGKAP, 
                    string TEMPAT_LAHIR, 
                    global::System.Nullable<global::System.DateTime> TANGGAL_LAHIR, 
                    string WARGA_NEGARA, 
                    string JENIS_IDENTITAS, 
                    string NO_IDENTITAS, 
                    string J_KEL, 
                    string ALAMAT, 
                    string NO_HP, 
                    string NO_TELP, 
                    System.DateTime TANGGAL_BERGABUNG, 
                    object FOTO_PELANGGAN, 
                    string Original_ID_LANGGAN, 
                    string Original_NAMA_LENGKAP, 
                    string Original_TEMPAT_LAHIR, 
                    global::System.Nullable<global::System.DateTime> Original_TANGGAL_LAHIR, 
                    string Original_WARGA_NEGARA, 
                    string Original_JENIS_IDENTITAS, 
                    string Original_NO_IDENTITAS, 
                    string Original_J_KEL, 
                    string Original_ALAMAT, 
                    string Original_NO_HP, 
                    string Original_NO_TELP, 
                    System.DateTime Original_TANGGAL_BERGABUNG) {
            return this.Update(Original_ID_LANGGAN, NAMA_LENGKAP, TEMPAT_LAHIR, TANGGAL_LAHIR, WARGA_NEGARA, JENIS_IDENTITAS, NO_IDENTITAS, J_KEL, ALAMAT, NO_HP, NO_TELP, TANGGAL_BERGABUNG, FOTO_PELANGGAN, Original_ID_LANGGAN, Original_NAMA_LENGKAP, Original_TEMPAT_LAHIR, Original_TANGGAL_LAHIR, Original_WARGA_NEGARA, Original_JENIS_IDENTITAS, Original_NO_IDENTITAS, Original_J_KEL, Original_ALAMAT, Original_NO_HP, Original_NO_TELP, Original_TANGGAL_BERGABUNG);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private PELANGGANTableAdapter _pELANGGANTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public PELANGGANTableAdapter PELANGGANTableAdapter {
            get {
                return this._pELANGGANTableAdapter;
            }
            set {
                this._pELANGGANTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._pELANGGANTableAdapter != null) 
                            && (this._pELANGGANTableAdapter.Connection != null))) {
                    return this._pELANGGANTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._pELANGGANTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(DataMember dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._pELANGGANTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PELANGGAN.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._pELANGGANTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(DataMember dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._pELANGGANTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PELANGGAN.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._pELANGGANTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(DataMember dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._pELANGGANTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PELANGGAN.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._pELANGGANTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(DataMember dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._pELANGGANTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._pELANGGANTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._pELANGGANTableAdapter != null)) {
                    revertConnections.Add(this._pELANGGANTableAdapter, this._pELANGGANTableAdapter.Connection);
                    this._pELANGGANTableAdapter.Connection = ((global::Oracle.DataAccess.Client.OracleConnection)(workConnection));
                    this._pELANGGANTableAdapter.Transaction = ((global::Oracle.DataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._pELANGGANTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._pELANGGANTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._pELANGGANTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._pELANGGANTableAdapter != null)) {
                    this._pELANGGANTableAdapter.Connection = ((global::Oracle.DataAccess.Client.OracleConnection)(revertConnections[this._pELANGGANTableAdapter]));
                    this._pELANGGANTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591